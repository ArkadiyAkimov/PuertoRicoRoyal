// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuertoRicoAPI.Data;

#nullable disable

namespace PuertoRicoAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230430092244_hitlerIsTheKing")]
    partial class hitlerIsTheKing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataGameState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CaptainFirstShipment")
                        .HasColumnType("bit");

                    b.Property<string>("CaptainPlayableIndexes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoffeeSupply")
                        .HasColumnType("int");

                    b.Property<int>("ColonistsOnShip")
                        .HasColumnType("int");

                    b.Property<int>("ColonistsSupply")
                        .HasColumnType("int");

                    b.Property<int>("CornSupply")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("int");

                    b.Property<int>("CurrentRole")
                        .HasColumnType("int");

                    b.Property<bool>("GameOver")
                        .HasColumnType("bit");

                    b.Property<int>("GovernorIndex")
                        .HasColumnType("int");

                    b.Property<int>("IndigoSupply")
                        .HasColumnType("int");

                    b.Property<bool>("IsRoleInProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("LastGovernor")
                        .HasColumnType("bit");

                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("QuarryCount")
                        .HasColumnType("int");

                    b.Property<int>("SugarSupply")
                        .HasColumnType("int");

                    b.Property<int>("TobaccoSupply")
                        .HasColumnType("int");

                    b.Property<int>("VictoryPointSupply")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlantation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<int>("Good")
                        .HasColumnType("int");

                    b.Property<bool>("IsDiscarded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExposed")
                        .HasColumnType("bit");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.HasIndex("SlotId");

                    b.ToTable("Plantations");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanUseHacienda")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseLargeWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseSmallWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseWharf")
                        .HasColumnType("bit");

                    b.Property<int>("Colonists")
                        .HasColumnType("int");

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<int>("Doubloons")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("VictoryPoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataPlayerId");

                    b.ToTable("PlayerBuildings");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataPlayerId");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerPlantation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Good")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataPlayerId");

                    b.HasIndex("SlotId");

                    b.ToTable("PlayerPlantations");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bounty")
                        .HasColumnType("int");

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFirstIteration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlayable")
                        .HasColumnType("bit");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<int>("Load")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataBuildingId")
                        .HasColumnType("int");

                    b.Property<int?>("DataPlayerBuildingId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DataBuildingId");

                    b.HasIndex("DataPlayerBuildingId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataTradeHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<string>("Goods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId")
                        .IsUnique();

                    b.ToTable("TradeHouses");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataGameStateId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataGameStateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataBuilding", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Buildings")
                        .HasForeignKey("DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlantation", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Plantations")
                        .HasForeignKey("DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataSlot", "Slot")
                        .WithMany()
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayer", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Players")
                        .HasForeignKey("DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerBuilding", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataPlayer", null)
                        .WithMany("Buildings")
                        .HasForeignKey("DataPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerGood", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataPlayer", null)
                        .WithMany("Goods")
                        .HasForeignKey("DataPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerPlantation", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataPlayer", null)
                        .WithMany("Plantations")
                        .HasForeignKey("DataPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataSlot", "Slot")
                        .WithMany()
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataRole", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Roles")
                        .HasForeignKey("DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataShip", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Ships")
                        .HasForeignKey("DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataSlot", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataBuilding", null)
                        .WithMany("Slots")
                        .HasForeignKey("DataBuildingId");

                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataPlayerBuilding", null)
                        .WithMany("Slots")
                        .HasForeignKey("DataPlayerBuildingId");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataTradeHouse", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithOne("TradeHouse")
                        .HasForeignKey("PuertoRicoAPI.Data.DataClasses.DataTradeHouse", "DataGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.User", b =>
                {
                    b.HasOne("PuertoRicoAPI.Data.DataClasses.DataGameState", null)
                        .WithMany("Users")
                        .HasForeignKey("DataGameStateId");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataBuilding", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataGameState", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Plantations");

                    b.Navigation("Players");

                    b.Navigation("Roles");

                    b.Navigation("Ships");

                    b.Navigation("TradeHouse")
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayer", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Goods");

                    b.Navigation("Plantations");
                });

            modelBuilder.Entity("PuertoRicoAPI.Data.DataClasses.DataPlayerBuilding", b =>
                {
                    b.Navigation("Slots");
                });
#pragma warning restore 612, 618
        }
    }
}
